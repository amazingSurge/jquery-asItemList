{"version":3,"sources":["jquery-asItemList.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","Sortable","jqueryAsItemListEs","this","_jquery","_Sortable","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_jquery2","_Sortable2","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DEFAULTS","namespace","sortableID","leng","itemList","render","item","process","value","string","JSON","stringify","parse","$","parseJSON","onInit","onReady","onAdd","onEdit","onAfterFill","STRINGS","asItemList","element","options","$element","extend","data","lang","strings","classes","disabled","wrapper","active","empty","hide","hover","addClass","wrap","$wrapper","parent","$itemList","replace","addTitle","prompt","$addItem","find","$prompt","$list","attr","initialized","_trigger","init","that","before","val","set","on","list","document","getElementById","proxy","e","editIndex","currentTarget","index","removeClass","sortIndex","sort","onUpdate","evt","splice","indexed","remove","children","_addList","eq","html","_editList","_delList","appendTo","eventType","_len","arguments","params","Array","_key","concat","trigger","NAMESPACE$1","onFunction","word","substring","toUpperCase","apply","valueObj","clear","update","isArray","_clearList","_updateList","_update","hasOwnProperty","call","push"],"mappings":"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","file":"jquery-asItemList.min.js","sourcesContent":["/**\n* jQuery asItemList v0.2.2\n* https://github.com/amazingSurge/jquery-asItemList\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $$1 from 'jquery';\nimport Sortable from 'Sortable';\n\nvar DEFAULTS = {\n  namespace: 'asItemList',\n  sortableID: 'asItemList-sortable',\n  leng: 'en',\n  itemList: function() {\n    return '<div class=\"namespace-container\">' +\n      '<a class=\"namespace-addItem\">' +\n      '<i></i>{{strings.addTitle}}' +\n      '</a>' +\n      '<ul class=\"namespace-list\"></ul>' +\n      '<div class=\"namespace-prompt\">{{strings.prompt}}</div>' +\n      '</div>';\n  },\n  render: function(item) {\n    return item;\n  },\n  process: function(value) {\n    if (value) {\n      const string = JSON.stringify(value);\n      if (string === '[]') {\n        return '';\n      }\n      return string;\n    }\n    return '';\n  },\n  parse: function(value) {\n    if (value) {\n      return $.parseJSON(value);\n    }\n    return null;\n  },\n  // callback\n  onInit: null,\n  onReady: null,\n  onAdd: null,\n  onEdit: null,\n  onAfterFill: null\n};\n\nconst NAMESPACE$1 = 'asItemList';\nconst STRINGS = {};\n\nclass asItemList {\n  constructor(element, options) {\n    this.element = element;\n    this.$element = $$1(element);\n\n    this.options = $$1.extend({}, DEFAULTS, options, this.$element.data());\n\n    // load lang strings\n    if (typeof STRINGS[this.options.lang] === 'undefined') {\n      this.lang = 'en';\n    } else {\n      this.lang = this.options.lang;\n    }\n    this.strings = $$1.extend({}, STRINGS[this.lang], this.options.strings);\n\n    this.namespace = this.options.namespace;\n\n    this.classes = {\n      disabled: `${this.namespace}_disabled`,\n      wrapper: `${this.namespace}-wrapper`,\n      active: `${this.namespace}_active`,\n      empty: `${this.namespace}_empty`,\n      hide: `${this.namespace}_hide`,\n      hover: `${this.namespace}_hover`\n    };\n\n    this.$element.addClass(this.namespace);\n    this.$element.wrap(`<div class=\"${this.classes.wrapper}\"></div>`);\n    this.$wrapper = this.$element.parent();\n\n    this.$itemList = $$1(this.options.itemList().replace(/namespace/g, this.namespace)\n      .replace(/\\{\\{strings.addTitle\\}\\}/g, this.strings.addTitle).replace(/\\{\\{strings.prompt\\}\\}/g, this.strings.prompt));\n    this.$addItem = this.$itemList.find(`.${this.namespace}-addItem`);\n    this.$prompt = this.$itemList.find(`.${this.namespace}-prompt`);\n    this.$list = this.$itemList.find(`.${this.namespace}-list`);\n    this.$list.attr('id', this.options.sortableID);\n\n    // flag\n    this.disabled = false;\n    this.initialized = false;\n\n    this._trigger('init');\n    this.init();\n  }\n\n  init() {\n    const that = this;\n\n    // Hide source element\n    this.$element.hide();\n    // And the list after the select\n    this.$element.before(this.$itemList);\n\n    // set value\n    this.value = this.options.parse(this.$element.val());\n    this.set(this.value, false);\n\n    this.$addItem.on('click', () => {\n      that._trigger('add');\n    });\n\n    const list = document.getElementById(this.options.sortableID);\n    this.$list.on('click', 'li', $$1.proxy(function(e) {\n      this.editIndex = $$1(e.currentTarget).index();\n      this._trigger('edit', this.editIndex);\n    }, this)).on('mouseenter', 'li', $$1.proxy(function(e) {\n      $$1(e.currentTarget).addClass(this.classes.hover);\n    }, this)).on('mouseleave', 'li', $$1.proxy(function(e) {\n      $$1(e.currentTarget).removeClass(this.classes.hover);\n    }, this)).on('mouseenter', `.${this.namespace}-list-drag`, $$1.proxy(function(e) {\n      this.sortIndex = $$1(e.currentTarget).parent().index();\n      this.sort = new Sortable(list, {\n        onUpdate: function(evt) {\n          const value = that.value.splice(that.sortIndex, 1);\n          that.value.splice($$1(evt.item).index(), 0, value[0]);\n          that.$element.val(that.options.process(that.value));\n          // if(that.sort) {\n          //   that.sort.destroy();\n          // }\n        }\n      });\n    }, this)).on('mouseleave', `.${this.namespace}-list-drag`, $$1.proxy(function() {\n      // if(this.sort) {\n      //   this.sort.destroy();\n      // }\n    }, this)).on('click', `.${this.namespace}-list-remove`, $$1.proxy(function(e) {\n      this.indexed = $$1(e.currentTarget).parent().index();\n      this.remove(this.indexed);\n      return false;\n    }, this));\n  }\n\n  _update() {\n    this.$element.val(this.val());\n    this._trigger('change', this.value);\n  }\n\n  _updateList() {\n    if (this.value.length > this.$list.children().length) {\n      this._addList();\n    } else if (this.value.length === this.$list.children().length && this.value.length !== 0) {\n      const item = this.value[this.editIndex];\n      this.$list.children().eq(this.editIndex).html(this._editList(item));\n    } else {\n      if (this.value.length === 0) {\n        this.$wrapper.addClass(this.classes.empty);\n      }\n      this._delList();\n    }\n  }\n  _editList(item) {\n    return `<span class=\"${this.namespace}-list-drag\"></span><div class=\"${this.namespace}-list-item\">${this.options.render(item)}</div><a href=\"#\" class=\"${this.namespace}-list-remove\"></a>`;\n  }\n\n  _addList() {\n    this.$wrapper.removeClass(this.classes.empty);\n    for (let i = this.$list.children().length, item; i < this.value.length; i++) {\n      item = this.value[i];\n      $$1('<li/>', {\n        html: this._editList(item)\n      }).appendTo(this.$list);\n    }\n  }\n\n  _delList() {\n    this.$list.children().eq(this.indexed).remove();\n  }\n\n  _clearList() {\n    this.$list.children().remove();\n  }\n\n  _trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  val(value) {\n    if (typeof value === 'undefined') {\n      return this.options.process(this.value);\n    }\n\n    const valueObj = this.options.parse(value);\n\n    if (valueObj) {\n      this.set(valueObj);\n    } else {\n      this.clear();\n    }\n  }\n\n  set(value, update) {\n    if ($$1.isArray(value)) {\n      this.value = value;\n    } else {\n      this.value = [];\n    }\n\n    this._clearList();\n    this._updateList();\n\n    if (update !== false) {\n      this._update();\n    }\n  }\n\n  clear(update) {\n    this.value = [];\n\n    this._clearList();\n    this.$wrapper.addClass(this.classes.empty);\n\n    if (update !== false) {\n      this._update();\n    }\n  }\n\n  remove(index, update) {\n    this.value.splice(index, 1);\n\n    this._updateList();\n\n    if (update !== false) {\n      this._update();\n    }\n  }\n\n  add(item, update) {\n    for (const key in item) {\n      if ({}.hasOwnProperty.call(item, key)) {\n        this.value.push(item[key]);\n      }\n    }\n\n    this._updateList();\n\n    if (update !== false) {\n      this._update();\n    }\n  }\n\n  update(index, item, update) {\n    this.value[index] = item;\n\n    this._updateList();\n\n    if (update !== false) {\n      this._update();\n    }\n  }\n\n  get() {\n    return this.value;\n  }\n\n  enable() {\n    this.disabled = false;\n    this.$wrapper.removeClass(this.classes.disabled);\n    this._trigger('enable');\n  }\n\n  disable() {\n    this.disabled = true;\n    this.$wrapper.addClass(this.classes.disabled);\n    this._trigger('disable');\n  }\n\n  destroy() {\n    this.$element.data(NAMESPACE$1, null);\n    this._trigger('destroy');\n  }\n\n  static localize(lang, label) {\n    STRINGS[lang] = label;\n  }\n\n  static setDefaults(options) {\n    $$1.extend(DEFAULTS, $$1.isPlainObject(options) && options);\n  }\n}\n\nasItemList.localize('en', {\n  addTitle: 'Add new list',\n  prompt: 'There is no item'\n});\n\nvar info = {\n  version:'0.2.2'\n};\n\nconst NAMESPACE = 'asItemList';\nconst OtherAsItemList = $$1.fn.asItemList;\n\nconst jQueryAsItemList = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get|val)/.test(method))) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $$1.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$$1(this).data(NAMESPACE)) {\n      $$1(this).data(NAMESPACE, new asItemList(this, options));\n    }\n  });\n};\n\n$$1.fn.asItemList = jQueryAsItemList;\n\n$$1.asItemList = $$1.extend({\n  setDefaults: asItemList.setDefaults,\n  noConflict: function() {\n    $$1.fn.asItemList = OtherAsItemList;\n    return jQueryAsItemList;\n  }\n}, info);\n"]}